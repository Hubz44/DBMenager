# -*- coding: utf-8 -*-
"""
/***************************************************************************
 DBMenagerDialog
                                 A QGIS plugin
  Menage your database!
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2019-06-11
        git sha              : $Format:%H$
        copyright            : (C) 2019 by Jakub Skowro≈Ñski
        email                : skowronski.jakub97@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

from PyQt5 import uic
from PyQt5 import QtWidgets
from PyQt5.QtSql import QSqlDatabase
from PyQt5.QtCore import Qt

import os

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'dbmenager_dialog_base.ui'))

class DBMenagerDialog(QtWidgets.QDialog, FORM_CLASS):

    db = None
    login = False

    def __init__(self, parent, parents=None):
        """Constructor."""
        super(DBMenagerDialog, self).__init__(parents)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect

        self.parent = parent
        self.setupUi(self)

        self.SysComboBox.addItems(['PostgreSQL'])
        self.loginButton.clicked.connect(self.connectToDatabase)

    def connectToDatabase(self):
        """ Connect to database and save connection info if logged in """
        self.login = True 
        name = self.dbName.displayText()
        host = self.dbHost.displayText()
        port = self.dbPort.displayText()
        user = self.dbUser.displayText()
        password = self.dbPassword.text()

        #TODO ADD OTHER DB SYSTEMS 
        if self.SysComboBox.currentText() == 'PostgreSQL':
            self.db = QSqlDatabase.addDatabase('QPSQL')

        self.db.setDatabaseName(name)
        self.db.setHostName(host)
        self.db.setPort(int(port))
        self.db.setUserName(user)
        self.db.setPassword(password)
        self.db.open()

        #TODO CHECK IF USER CAN CREATE ROLES AND USERS
        if self.db.isOpen():
            QtWidgets.QMessageBox.information(None, 'Access granted', f'You have successfully login to {name}')
            self.close()
            self.parent.showDock()
        else:
            QtWidgets.QMessageBox.warning(None, 'Access denied', f'Cannot connect to {name}. Try again!')